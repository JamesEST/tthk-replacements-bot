import vk_api as vkapi
import requests
import calendar
import datetime
from bs4 import BeautifulSoup
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor, VkKeyboardButton
import json
import os
import time
import re
output_rows = []
writeyourgroup = {}
writeyourdate = {}
writeyourweekday = {}
usergroup = {}



access_token = os.environ["ACCESS_TOKEN"]
vk = vkapi.VkApi(token=access_token)

KeyboardNumDays = {0: 'E',
                1: 'T',
                2: 'K',
                3: 'N',
                4: 'R',
                5: 'L',
                6: 'P'}
DayOfWeek = {'E': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
            'T': '–í—Ç–æ—Ä–Ω–∏–∫',
            'K': '–°—Ä–µ–¥–∞',
            'N': '–ß–µ—Ç–≤–µ—Ä–≥',
            'R': '–ü—è—Ç–Ω–∏—Ü–∞',
            'L': '–°—É–±–±–æ—Ç–∞',
            'P': "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"}

# –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = VkKeyboard(one_time=False, inline=False)
WeekDayskeyboard = VkKeyboard(one_time=False, inline=True)
FiveDayskeyboard = VkKeyboard(one_time=False, inline=True)

keyboard.add_button('–ò–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–µ–π –≥—Ä—É–ø–ø—ã', color=VkKeyboardColor.PRIMARY)
keyboard.add_line()
keyboard.add_button('–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ –¥–∞—Ç–∞–º', color=VkKeyboardColor.DEFAULT)
keyboard.add_line()
keyboard.add_button('–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏', color=VkKeyboardColor.DEFAULT)
keyboard.add_line()  # –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É
keyboard.add_button('–í –∫–∞–∫–æ–π —è –≥—Ä—É–ø–ø–µ?', color=VkKeyboardColor.POSITIVE)
keyboard.add_button('–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É', color=VkKeyboardColor.NEGATIVE)


def numdayweek():
    result = time.gmtime(2)
    return calendar.weekday(result.tm_year, result.tm_mon, result.tm_mday)

def keynumdays():
    todaydate = datetime.date.today()
    day2date = datetime.date.today() + datetime.timedelta(days=1)
    day3date = datetime.date.today() + datetime.timedelta(days=2)
    day4date = datetime.date.today() + datetime.timedelta(days=3)
    day5date = datetime.date.today() + datetime.timedelta(days=4)
    todayweek = calendar.weekday(todaydate.year, todaydate.month, todaydate.day)
    day2week = calendar.weekday(day2date.year, day2date.month, day2date.day)
    day3week = calendar.weekday(day3date.year, day3date.month, day3date.day)
    day4week = calendar.weekday(day4date.year, day4date.month, day4date.day)
    day5week = calendar.weekday(day5date.year, day5date.month, day5date.day)
    todaydate = [todaydate.day, todaydate.month, todaydate.year]
    day2date = [day2date.day, day2date.month, day2date.year]
    day3date = [day3date.day, day3date.month, day3date.year]
    day4date = [day4date.day, day4date.month, day4date.year]
    day5date = [day5date.day, day5date.month, day5date.year]
    datelist = [todaydate, day2date, day3date, day4date, day5date]
    for i in datelist:
        if i[0] < 10:
            i[0] = str(i[0])
            i[0] = '0' + i[0]
        if i[1] < 10:
            i[1] = str(i[1])
            i[1] = '0' + i[1]
    today = f"{KeyboardNumDays[todayweek]}: {(datelist[0])[0]}.{(datelist[0])[1]}.{(datelist[0])[2]}"
    day2 = f"{KeyboardNumDays[day2week]}: {(datelist[1])[0]}.{(datelist[1])[1]}.{(datelist[1])[2]}"
    day3 = f"{KeyboardNumDays[day3week]}: {(datelist[2])[0]}.{(datelist[2])[1]}.{(datelist[2])[2]}"
    day4 = f"{KeyboardNumDays[day4week]}: {(datelist[3])[0]}.{(datelist[3])[1]}.{(datelist[3])[2]}"
    day5 = f"{KeyboardNumDays[day5week]}: {(datelist[4])[0]}.{(datelist[4])[1]}.{(datelist[4])[2]}"
    return today, day2, day3, day4, day5

if numdayweek() == 0:
    WeekDayskeyboard.add_button("E", color=VkKeyboardColor.POSITIVE)
else:
    WeekDayskeyboard.add_button("E", color=VkKeyboardColor.DEFAULT)
if numdayweek() == 1:
    WeekDayskeyboard.add_button("T", color=VkKeyboardColor.POSITIVE)
else:
    WeekDayskeyboard.add_button("T", color=VkKeyboardColor.DEFAULT)
if numdayweek() == 2:
    WeekDayskeyboard.add_button("K", color=VkKeyboardColor.POSITIVE)
else:
    WeekDayskeyboard.add_button("K", color=VkKeyboardColor.DEFAULT)
WeekDayskeyboard.add_line()
if numdayweek() == 3:
    WeekDayskeyboard.add_button("N", color=VkKeyboardColor.POSITIVE)
else:
    WeekDayskeyboard.add_button("N", color=VkKeyboardColor.DEFAULT)
if numdayweek() == 4:
    WeekDayskeyboard.add_button("R", color=VkKeyboardColor.POSITIVE)
else:
    WeekDayskeyboard.add_button("R", color=VkKeyboardColor.DEFAULT)
if numdayweek() == 5:
    WeekDayskeyboard.add_button("L", color=VkKeyboardColor.POSITIVE)
else:
    WeekDayskeyboard.add_button("L", color=VkKeyboardColor.NEGATIVE)
if numdayweek() == 6:
    WeekDayskeyboard.add_button("P", color=VkKeyboardColor.POSITIVE)
else:
    WeekDayskeyboard.add_button("P", color=VkKeyboardColor.NEGATIVE)

today, day2, day3, day4, day5 = keynumdays()

FiveDayskeyboard.add_button(today, color=VkKeyboardColor.POSITIVE)
FiveDayskeyboard.add_line()
FiveDayskeyboard.add_button(day2, color=VkKeyboardColor.PRIMARY)
FiveDayskeyboard.add_line()
FiveDayskeyboard.add_button(day3, color=VkKeyboardColor.PRIMARY)
FiveDayskeyboard.add_line()
FiveDayskeyboard.add_button(day4, color=VkKeyboardColor.PRIMARY)
FiveDayskeyboard.add_line()
FiveDayskeyboard.add_button(day5, color=VkKeyboardColor.PRIMARY)

# –ø–∞—Ä—Å–∏–º
r = requests.get('http://www.tthk.ee/tunniplaani-muudatused/')
html_content = r.text
soup = BeautifulSoup(html_content, 'html.parser')
table = soup.findChildren('table')
def updatefile(usergroup):
    file = open('ids.txt', 'w', encoding='utf-8')
    file.write(json.dumps(usergroup))
    file.close()
    return usergroup
def openfromfile(usergroup):
    file = open('ids.txt', 'r', encoding='utf-8')
    usergroup = eval(file.read())
    file.close()
    return usergroup
def write_msg(user_id, random_id, message):
    vk.method('messages.send', {'user_id': user_id, 'random_id': random_id, 'message': message})
def send_keyboard(peer_id, random_id, message):
    vk.method('messages.send', {'peer_id': peer_id, 'random_id': random_id, 'keyboard': keyboard.get_keyboard(), 'message': message})
def send_weekkeyboard(peer_id, random_id, message):
    vk.method('messages.send', {'peer_id': peer_id, 'random_id': random_id, 'keyboard': WeekDayskeyboard.get_keyboard(), 'message': message})
def send_datekeyboard(peer_id, random_id, message):
    vk.method('messages.send', {'peer_id': peer_id, 'random_id': random_id, 'keyboard': FiveDayskeyboard.get_keyboard(), 'message': message})
# –ù–∏—á–µ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ.

usergroup = openfromfile(usergroup)


def parsepage(table):
    muudatused = []
    for i in range(len(table)):
        my_table = table[i]
        rows = my_table.find_all('tr')
        for row in rows:
            muudatus = []
            cells = row.find_all('td')
            for cell in cells:
                if cell.text not in ["\xa0", "Kuup√§ev", "R√ºhm", "Tund", "√ïpetaja", "Ruum"]:
                    data = cell.text
                    muudatus.append(data)
            # –∑–¥–µ—Å—å –µ—Å—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ muudatus
            if muudatus != []:
                muudatused.append(muudatus)
        else:
            continue
    return muudatused

def makemuudatused(i, forshow, kuupaev):
    if kuupaev == True:
        if len(i) == 6:
            forshow.append(f"üóì {i[0]} {i[1]}\nü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]} \nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: i{4}\n–ö–∞–±–∏–Ω–µ—Ç: {i[5]}")
        elif len(i) > 4 and i[4].lower() in "j√§√§b √§ra":
            forshow.append(f"üóì {i[0]} {i[1]}\nü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]}\n‚ùå –ù–µ —Å–æ—Å—Ç–æ–∏—Ç—Å—è")
        elif len(i) > 4 and i[4].lower() in "s√∂√∂givahetund":
            forshow.append(f"üóì {i[0]} {i[1]}\nü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]}\n ‚è∞ –£—Ä–æ–∫: {i[3]}\nüÜí –û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤")
        elif len(i) > 5 and i[5].lower() in "iseseisev t√∂√∂ kodus":
            forshow.append(f"üóì {i[0]} {i[1]}\nü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]}\nüè† –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–æ–º–∞")
        elif len(i) > 5 and (i[5].lower() == "" or i[5].lower() == " "):
            forshow.append(f"üóì {i[0]} {i[1]}\nü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]}\nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {i[4]}")
        else:
            forshow.append(f"üóì –í {i[0]} {i[1]}\nü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]}\n")
    if kuupaev == False:
        if len(i) == 6:
            forshow.append(f"ü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]} \nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: i{4}\n–ö–∞–±–∏–Ω–µ—Ç: {i[5]}")
        elif len(i) > 4 and i[4].lower() in "j√§√§b √§ra":
            forshow.append(f"ü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]}\n‚ùå –ù–µ —Å–æ—Å—Ç–æ–∏—Ç—Å—è")
        elif len(i) > 4 and i[4].lower() in "s√∂√∂givahetund":
            forshow.append(f"ü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]}\n ‚è∞ –£—Ä–æ–∫: {i[3]}\nüÜí –û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤")
        elif len(i) > 5 and i[5].lower() in "iseseisev t√∂√∂ kodus":
            forshow.append(f"ü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]}\nüè† –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–æ–º–∞")
        elif len(i) > 5 and (i[5].lower() == "" or i[5].lower() == " "):
            forshow.append(f"ü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]}\nüë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {i[4]}")
        else:
            forshow.append(f"ü¶Ü –ì—Ä—É–ø–ø–∞: {i[2]} ‚è∞ –£—Ä–æ–∫: {i[3]}\n")
    return forshow

def getmuudatused(setgroup, usergroup, user):
    forshow = []
    muudatused = parsepage(table)
    for i in muudatused:
        if setgroup.lower() in i[2].lower():
            makemuudatused(i, forshow, True)
    if len(forshow) > 0:
        write_msg(event.user_id, event.random_id, f"–î–ª—è –≥—Ä—É–ø–ø—ã ü¶Ü {setgroup} –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:")
        for w in forshow:
            write_msg(event.user_id, event.random_id, w)
    elif len(forshow) == 0:
        write_msg(user, event.random_id,"–î–ª—è –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: www.tthk.ee/tunniplaani-muudatused.")

def getmuudatusedall(user, date):
    forshow = []
    muudatused = parsepage(table)
    for i in muudatused:
        if i[1] == date:
            makemuudatused(i, forshow, False)
    if len(forshow) > 0:
        kogutunniplaan = f"–í —É—á–µ–±–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ üóì {date} —Å–ª–µ–¥—É—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:\n"
        for w in forshow:
            kogutunniplaan += f"{w}\n"
        write_msg(user, event.random_id, kogutunniplaan)
    elif len(forshow) == 0:
        write_msg(user, event.random_id,f"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç –Ω–∞ {date}, –∫–æ—Ç–æ—Ä—É—é –≤—ã –≤–≤–µ–ª–∏. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: www.tthk.ee/tunniplaani-muudatused.")

def getmuudatusedweekly(user, weekday):
    forshow = []
    muudatused = parsepage(table)
    for i in muudatused:
        if i[0] == weekday:
            makemuudatused(i, forshow, False)
    if len(forshow) > 0:
        kogutunniplaan = f"–í —É—á–µ–±–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ üóì {DayOfWeek[weekday]} —Å–ª–µ–¥—É—é—â–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:\n"
        for w in forshow:
            kogutunniplaan += f"{w}\n"
        write_msg(user, event.random_id, kogutunniplaan)
    elif len(forshow) == 0:
        write_msg(user, event.random_id,f"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç –Ω–∞ {weekday}, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤–≤–µ–ª–∏. –ü–æ–¥—Ä–æ–±–Ω–µ–µ: www.tthk.ee/tunniplaani-muudatused.")


longpoll = VkLongPoll(vk)
for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW:
        if event.to_me:
            if event.text.lower() == "–Ω–∞—á–∞—Ç—å" or event.text.lower() == 'start':
                usergroup = openfromfile(usergroup)
                send_keyboard(event.peer_id, event.random_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –∫–ª–∞–∏–≤–∞—Ç—É—Ä—ã –Ω–∏–∂–µ.")
                if str(event.user_id) not in usergroup.keys():
                    write_msg(event.user_id, event.random_id, "–£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –∫–æ–¥ –≥—Ä—É–ø–ø—ã, —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ.")
                    writeyourgroup[event.user_id] = 1
            elif event.text.lower() == "—É–∫–∞–∑–∞—Ç—å –≥—Ä—É–ø–ø—É" or event.text.lower() == "–∏–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É":
                write_msg(event.user_id, event.random_id, "–í –∫–∞–∫–æ–π –≥—Ä—É–ø–ø–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?\n–£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã: ")
                writeyourgroup[event.user_id] = 1
            elif event.text[-3:].lower() in ['v19', 'v18', 'v17', 'e19', 'e18', 'e17'] and event.user_id in writeyourgroup.keys():
                group = event.text
                usergroup[str(event.user_id)] = group
                write_msg(event.user_id, event.random_id, f"–í—ã —É–∫–∞–∑–∞–ª–∏, —á—Ç–æ –í–∞—à–∞ –≥—Ä—É–ø–ø–∞: {usergroup[str(event.user_id)]}.")
                writeyourgroup[event.user_id] = 0
                usergroup = updatefile(usergroup)
            elif str(event.user_id) not in writeyourgroup.keys() and event.text[-3:].lower() in ['v19', 'v18', 'v17', 'e19', 'e18', 'e17']:
                write_msg(event.user_id, event.random_id, f"–î–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                write_msg(event.user_id, event.random_id, f"–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∫–∞–∑–∞—Ç—å –≥—Ä—É–ø–ø—É –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–º–∏—Ç–µ –ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É.")
            elif event.text.lower() == "–≤ –∫–∞–∫–æ–π —è –≥—Ä—É–ø–ø–µ?":
                if str(event.user_id) not in usergroup.keys():
                    write_msg(event.user_id, event.random_id, "–£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –∫–æ–¥ –≥—Ä—É–ø–ø—ã.")
                    write_msg(event.user_id, event.random_id, "–í –∫–∞–∫–æ–π –≥—Ä—É–ø–ø–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?\n–£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã: ")
                    writeyourgroup[event.user_id] = 1
                if str(event.user_id) in usergroup.keys():
                    write_msg(event.user_id, event.random_id, f"–í—ã —É–∫–∞–∑–∞–ª–∏, —á—Ç–æ –í–∞—à–∞ –≥—Ä—É–ø–ø–∞: {usergroup[str(event.user_id)]}.\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –≥—Ä—É–ø–ø—É –Ω–∞–∂–º–∏—Ç–µ \"–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É\".")
            elif event.text.lower() == "–∏–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–µ–π –≥—Ä—É–ø–ø—ã":
                if str(event.user_id) not in usergroup.keys():
                    write_msg(event.user_id, event.random_id, "–£ –≤–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –∫–æ–¥ –≥—Ä—É–ø–ø—ã.")
                    write_msg(event.user_id, event.random_id, "–í –∫–∞–∫–æ–π –≥—Ä—É–ø–ø–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?\n–£–∫–∞–∂–∏—Ç–µ –∫–æ–¥ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã: ")
                    writeyourgroup[event.user_id] = 1
                if str(event.user_id) in usergroup.keys():
                    setgroup = usergroup[str(event.user_id)]
                    lastmuudatused = getmuudatused(setgroup, usergroup, event.user_id)
            elif event.text.lower() == "–∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ –¥–∞—Ç–∞–º":
                send_datekeyboard(event.peer_id, event.random_id, f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:")
                writeyourdate[str(event.user_id)] = 1
            elif event.text.lower() == "–∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏":
                send_weekkeyboard(event.peer_id, event.random_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: E, T, K, N, R, L, P.")
                writeyourweekday[str(event.user_id)] = 1
            elif event.text.lower() in ['e', 't', 'k', 'n', 'r', 'l', 'p'] and str(event.user_id) in writeyourweekday.keys():
                getmuudatusedweekly(event.user_id, event.text)
            elif event.text[-5:].lower() in ['.2020', '.2021', '.2022', '.2023', '.2024', '.2025', '.2026'] and writeyourdate[str(event.user_id)] == 1:
                if event.text[1] == ":":
                    enddatetosearch = re.split(r':\s',event.text)
                    newmuudatused = getmuudatusedall(event.user_id, enddatetosearch[1])
                else:
                    newmuudatused = getmuudatusedall(event.user_id, event.text)
            else:
                write_msg(event.user_id, event.random_id, f"–î–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
